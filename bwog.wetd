---
(:date "2023/04/05")
---

# bwog: 又一次写博客生成器

这一次的想法是去年暑假的时候萌发的，但是由于学业耽搁了半年。现在没有学业的影响，花两周尝试了各种方案，终于完成了。

bwog 是用 Common Lisp 写的，这也是我第一次用 Lisp 方言写实用程序。过程中发现 Lisp 的表达能力确实是不错，只用了 400 行就完成了所有功能。

如 README 所说，主要功能亮点是这三个：

:ul
字符替换（如把空心句号替换成全角实心点）

KaTeX 自定义宏

嵌入 LaTeX 内容（交换图）
:end

这里展示一下这些功能吧。

$\GL_n(F)$

```
$\GL_n(F)$
```

```!latex
\begin{tikzcd}
T
\arrow[drr, bend left, "x"]
\arrow[ddr, bend right, "y"]
\arrow[dr, dotted, "{(x,y)}" description] & & \\
& X \times_Z Y \arrow[r, "p"] \arrow[d, "q"]
& X \arrow[d, "f"] \\
& Y \arrow[r, "g"]
& Z
\end{tikzcd}
```

````
```!latex
\begin{tikzcd}
T
\arrow[drr, bend left, "x"]
\arrow[ddr, bend right, "y"]
\arrow[dr, dotted, "{(x,y)}" description] & & \\
& X \times_Z Y \arrow[r, "p"] \arrow[d, "q"]
& X \arrow[d, "f"] \\
& Y \arrow[r, "g"]
& Z
\end{tikzcd}
```
````

不过遇到了一个大坑，Common Lisp 的实现 SBCL 对 Windows 的支持有些问题，READ-LINE 会读到 CR。我以后还是换 Linux 桌面算了。

## 方案

之前尝试过的方案有用 Pandoc 读取 Markdown，不过发现 Markdown 有很多我不需要的功能。后来重新写了一个标记语言，反而思路更清晰。

关于这个叫 wetd 的标记语言，我其实想得不多，我只想有一些在 parser 层面不同的 block element，然后实现我需要的 inline element。最后 block element 就有这几个：

:ol
段落

标题

代码块

通用块级容器
:end

inline element 则有这些：

:ol
公式

代码

链接（图片）

强调
:end

可以发现比 Markdown 少了很多，但对我来说够用了。

话说行首冒号开头的特殊语法还是从 IBM GML 那学来的，而且又喜欢 Lisp、Erlang 这些，我果然不愧于 @(https://github.com/lrw04)(Github profile) 上写的“interested mainly in technology popular among old people”了。

总之，这是@(https://github.com/lrw04/bwog)(仓库)。
